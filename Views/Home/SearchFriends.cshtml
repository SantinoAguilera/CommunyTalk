<section class="search-section">
    <h1 class="tituloAmigos">Mensajes directos</h1>
    
    <a asp-controller="Home" asp-action="CambiarBusquedaAmigos" class="ChangeButton">Cambiar de búsqueda</a>
    @{
        if(!ViewBag.StatusBusqueda)
            {
            <div class="search-container">
                <input type="text" id="searchInputUsers" placeholder="Buscar amigos..." />
               <button type="submit" class="search-button">
                        <img class="lupa" src="/images/lupa.png"/>
                    </button>
            </div>
            }
            else
            {
                <div class="search-container">
                    <input type="text" id="searchInputUsers" placeholder="Buscar desconocidos..." />
                    <button type="submit" class="search-button">
                        <img class="lupa" src="/images/lupa.png"/>
                    </button>
                </div>
            }
    }
    <div class="container">
        @{
            <div class="row justify-content-start" id="userList">
                @{
                    foreach(Usuarios usuario in ViewBag.Usuarios)
                    {
                        string FotoPerfil = "/images/UserImages/" + usuario.Foto;
                        <div class="col-auto mb-3 user-card" data-user-name="@usuario.Nombre">
                            <a asp-controller="Home" asp-action="PrivateChat" asp-route-IdUsuario="@usuario.IdUsuario">
                                <div class="card carta" style="width: 560px;">
                                    <div class="row g-0">
                                        <div class="col-md-4">
                                            <img src="@FotoPerfil" class="img-fluid rounded-start cartaImagen">
                                        </div>
                                        <div class="col-md-8">
                                            <div class="card-body">
                                                <h1 class="card-title">@usuario.Nombre</h1>
                                                <p class="card-text">@usuario.Descripcion</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>  
                            </a>
                        </div>
                    }
                }
            </div>
        }
    </div>
</section>

<!-- Script para la búsqueda en tiempo real -->
<script>
    const searchInputUsers = document.getElementById('searchInputUsers');
    const userList = document.getElementById('userList');
    let debounceTimer;

    // Función para filtrar usuarios por el comienzo del nombre
    function filterUsers() {
        const searchText = searchInputUsers.value.toLowerCase();
        const userCards = userList.getElementsByClassName('user-card');

        for (let card of userCards) {
            const userName = card.getAttribute('data-user-name').toLowerCase();
            if (userName.startsWith(searchText)) {
                card.style.display = 'block'; // Muestra la tarjeta si el nombre empieza con el texto
            } else {
                card.style.display = 'none'; // Oculta la tarjeta si no empieza con el texto
            }
        }
    }

    // Configuración de debounce para esperar 500ms después de la última escritura
    searchInputUsers.addEventListener('input', () => {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(filterUsers, 500);
    });
</script>
